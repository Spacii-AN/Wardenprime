# ===========================================
# WardenPrime Discord Bot Environment Configuration
# ===========================================
# Copy this file to .env and fill in your values
#
# DEVELOPMENT SETUP OPTIONS:
# 1. Individual Development: ./setup-dev.sh (Linux/macOS) or setup-dev.bat (Windows)
# 2. Shared Development: ./setup-dev-shared.sh (Linux/macOS) or setup-dev-shared.bat (Windows)
# 3. Manual Setup: Copy this template to .env and configure manually

# ===========================================
# REQUIRED: Discord Bot Configuration
# ===========================================
# Get these from https://discord.com/developers/applications
BOT_TOKEN=your_discord_bot_token_here
CLIENT_ID=your_discord_client_id_here

# Optional: Test guild ID for development
TEST_GUILD_ID=your_test_guild_id_here

# ===========================================
# Bot Customization
# ===========================================
BOT_NAME=WardenPrime
BOT_PREFIX=!
BOT_OWNER_ID=your_discord_user_id_here

# ===========================================
# Embed Customization (Dashboard-Based)
# ===========================================
# NOTE: Embed customization is now handled through the dashboard!
# Visit /embeds in your dashboard to customize embed colors, footer, and appearance.
# These environment variables are kept as fallbacks only.

# Fallback embed settings (used only if database is unavailable)
EMBED_COLOR=5865F2
EMBED_FOOTER=Powered by WardenPrime

# ===========================================
# Feature Flags
# ===========================================
ENABLE_COOLDOWNS=true
ENABLE_MENTIONS=true
ENABLE_LOGGING=true
LOG_LEVEL=INFO
SKIP_COMMAND_REGISTRATION=false

# ===========================================
# Command Deployment Configuration
# ===========================================
# For development, use 'guild' mode to avoid global command conflicts
# For production, use 'auto' or 'global' mode
COMMAND_DEPLOYMENT_MODE=auto
DEPLOYMENT_GUILD_IDS=

# ===========================================
# Database Configuration
# ===========================================
DATABASE_TYPE=postgres

# PostgreSQL Configuration (for Docker)
PG_HOST=postgres
PG_PORT=5432
PG_DATABASE=wardenprime
PG_USER=wardenprime
PG_PASSWORD=wardenprime_password
PG_SSL_MODE=disable

# ===========================================
# Dashboard Configuration (Optional)
# ===========================================
# The dashboard provides web-based control for:
# - Bot status and service management
# - Embed customization (/embeds)
# - Warframe catalog management
# - Join form configuration

DASHBOARD_ENABLED=false
DASHBOARD_PORT=3080
DASHBOARD_PUBLIC_URL=
DASHBOARD_SESSION_SECRET=your_session_secret_here
OAUTH_CALLBACK_URL=

# ===========================================
# Environment
# ===========================================
# Use 'development' for local development, 'production' for live deployment
NODE_ENV=production

# ===========================================
# Development Notes
# ===========================================
# 
# MULTI-DEVELOPER SETUP:
# - Individual Development: Each developer has their own bot and database
# - Shared Development: Multiple developers share the same Discord server
# 
# COORDINATION:
# - Use guild-specific command deployment for development
# - Coordinate bot usage when using shared development setup
# - Each developer should have their own database to avoid conflicts
# 
# SETUP SCRIPTS:
# - Individual: ./setup-dev.sh (Linux/macOS) or setup-dev.bat (Windows)
# - Shared: ./setup-dev-shared.sh (Linux/macOS) or setup-dev-shared.bat (Windows)
# - Manual: Copy this template and configure manually
