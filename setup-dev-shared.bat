@echo off
REM WardenPrime Shared Development Setup Script for Windows
REM This script helps set up the development environment when multiple developers
REM want to use the same Discord server for testing

echo.
echo 🤝 WardenPrime Shared Development Setup
echo ========================================
echo.
echo This setup is for when multiple developers want to use the same Discord server.
echo.

REM Check if we're in the right directory
if not exist "package.json" (
    echo ❌ Please run this script from the WardenPrime root directory
    pause
    exit /b 1
)

echo 👤 Developer Information
echo ========================
set /p DEV_NAME="Enter your name: "
set /p BOT_OWNER_ID="Enter your Discord user ID (bot owner): "

echo.
echo 🤖 Shared Bot Configuration
echo ===========================
echo You'll be using a shared bot token and Discord server.
echo Make sure to coordinate with other developers!
echo.
set /p SHARED_BOT_TOKEN="Enter the shared bot token: "
set /p SHARED_CLIENT_ID="Enter the shared client ID: "
set /p SHARED_GUILD_ID="Enter the shared guild ID: "

REM Generate unique passwords (simple method)
set DEV_PASSWORD=%RANDOM%%RANDOM%%RANDOM%
set DEV_SESSION_SECRET=%RANDOM%%RANDOM%%RANDOM%%RANDOM%

echo.
echo 📝 Creating shared development environment file...

REM Create .env file for shared development
(
echo # ===========================================
echo # WardenPrime Shared Development Environment
echo # ===========================================
echo # Generated by setup-dev-shared.bat on %date% %time%
echo # 
echo # IMPORTANT: This setup uses a shared Discord server and bot token.
echo # Coordinate with other developers to avoid conflicts!
echo.
echo # Developer Information
echo DEV_NAME=%DEV_NAME%
echo DEV_PASSWORD=%DEV_PASSWORD%
echo DEV_SESSION_SECRET=%DEV_SESSION_SECRET%
echo.
echo # Shared Discord Bot Configuration
echo BOT_TOKEN=%SHARED_BOT_TOKEN%
echo CLIENT_ID=%SHARED_CLIENT_ID%
echo TEST_GUILD_ID=%SHARED_GUILD_ID%
echo BOT_OWNER_ID=%BOT_OWNER_ID%
echo.
echo # Bot Customization ^(unique per developer^)
echo BOT_NAME=WardenPrime-Dev-%DEV_NAME%
echo BOT_PREFIX=!
echo EMBED_COLOR=5865F2
echo EMBED_FOOTER=Powered by WardenPrime ^(Dev - %DEV_NAME%^)
echo.
echo # Feature Flags
echo ENABLE_COOLDOWNS=true
echo ENABLE_MENTIONS=true
echo ENABLE_LOGGING=true
echo LOG_LEVEL=DEBUG
echo SKIP_COMMAND_REGISTRATION=false
echo.
echo # Command Deployment ^(guild-specific for shared development^)
echo COMMAND_DEPLOYMENT_MODE=guild
echo DEPLOYMENT_GUILD_IDS=%SHARED_GUILD_ID%
echo.
echo # Database Configuration ^(isolated per developer^)
echo DATABASE_TYPE=postgres
echo PG_HOST=postgres
echo PG_PORT=5432
echo PG_DATABASE=wardenprime_dev_%DEV_NAME%
echo PG_USER=%DEV_NAME%
echo PG_PASSWORD=%DEV_PASSWORD%
echo PG_SSL_MODE=disable
echo.
echo # Dashboard Configuration
echo DASHBOARD_ENABLED=true
echo DASHBOARD_PORT=3080
echo DASHBOARD_PUBLIC_URL=http://localhost:3080
echo DASHBOARD_SESSION_SECRET=%DEV_SESSION_SECRET%
echo OAUTH_CALLBACK_URL=http://localhost:3080/auth/callback
echo.
echo # Environment
echo NODE_ENV=development
) > .env

echo ✅ Created .env file

REM Create docker-compose override for shared development
echo 📝 Creating Docker Compose override for shared development...
(
echo # Shared Development Docker Compose Override
echo # This file allows each developer to have their own database while sharing the Discord server
echo.
echo version: '3.8'
echo.
echo services:
echo   # PostgreSQL Database ^(Isolated per developer^)
echo   postgres:
echo     environment:
echo       POSTGRES_DB: wardenprime_dev_%DEV_NAME%
echo       POSTGRES_USER: %DEV_NAME%
echo       POSTGRES_PASSWORD: %DEV_PASSWORD%
echo     volumes:
echo       - postgres_data_%DEV_NAME%:/var/lib/postgresql/data
echo     ports:
echo       - "5432:5432"
echo.
echo   # Discord Bot ^(Shared server, isolated database^)
echo   bot:
echo     environment:
echo       # Development settings
echo       NODE_ENV: development
echo       LOG_LEVEL: DEBUG
echo       # Database ^(isolated per developer^)
echo       PG_DATABASE: wardenprime_dev_%DEV_NAME%
echo       PG_USER: %DEV_NAME%
echo       PG_PASSWORD: %DEV_PASSWORD%
echo       # Bot settings ^(unique per developer^)
echo       BOT_NAME: WardenPrime-Dev-%DEV_NAME%
echo       EMBED_FOOTER: Powered by WardenPrime ^(Dev - %DEV_NAME%^)
echo       # Command deployment ^(guild-specific for shared development^)
echo       COMMAND_DEPLOYMENT_MODE: guild
echo       DEPLOYMENT_GUILD_IDS: %SHARED_GUILD_ID%
echo       # Dashboard ^(useful for development^)
echo       DASHBOARD_ENABLED: true
echo       DASHBOARD_PORT: 3080
echo       DASHBOARD_SESSION_SECRET: %DEV_SESSION_SECRET%
echo     volumes:
echo       - ./logs:/app/logs
echo       - ./data:/app/data
echo     ports:
echo       - "3080:3080"
echo.
echo   # Dashboard ^(Development^)
echo   dashboard:
echo     environment:
echo       NODE_ENV: development
echo       DASHBOARD_PORT: 3080
echo       DASHBOARD_SESSION_SECRET: %DEV_SESSION_SECRET%
echo     ports:
echo       - "3080:3080"
echo     profiles:
echo       - dashboard
echo.
echo volumes:
echo   postgres_data_%DEV_NAME%:
echo     driver: local
) > docker-compose.override.yml

echo ✅ Created docker-compose.override.yml

REM Create necessary directories
echo 📁 Creating directories...
if not exist "logs" mkdir logs
if not exist "data" mkdir data

echo ✅ Created directories

REM Create bot coordination file
echo 📝 Creating bot coordination system...
(
echo # Bot Coordination File
echo # This file helps coordinate bot usage between developers
echo.
echo CURRENT_USER=%DEV_NAME%
echo LAST_ACTIVE=%date% %time%
echo STATUS=available
echo.
echo # To check if bot is available:
echo # findstr "STATUS=available" .bot-coordination
echo.
echo # To claim bot access:
echo # echo CURRENT_USER=your_name > .bot-coordination
echo # echo STATUS=in_use >> .bot-coordination
echo.
echo # To release bot access:
echo # echo STATUS=available > .bot-coordination
) > .bot-coordination

echo ✅ Created bot coordination system

echo.
echo 🎉 Shared development setup complete!
echo.
echo 📋 Your shared development environment:
echo    Developer: %DEV_NAME%
echo    Database: wardenprime_dev_%DEV_NAME% (isolated)
echo    Discord Server: %SHARED_GUILD_ID% (shared)
echo    Dashboard: http://localhost:3080
echo    Bot Name: WardenPrime-Dev-%DEV_NAME%
echo.
echo 🤝 Coordination with other developers:
echo    - Check bot availability: findstr "STATUS=available" .bot-coordination
echo    - Claim bot access: echo CURRENT_USER=%DEV_NAME% > .bot-coordination
echo    - Release bot access: echo STATUS=available > .bot-coordination
echo.
echo 🚀 To start development:
echo    docker-start.bat
echo.
echo 📝 Important notes:
echo    - Coordinate with other developers before starting the bot
echo    - Each developer has their own isolated database
echo    - Use the same Discord server for testing
echo    - Release bot access when done developing
echo.
echo 💡 Pro tip: Create a Discord channel for development coordination!
echo.
pause
